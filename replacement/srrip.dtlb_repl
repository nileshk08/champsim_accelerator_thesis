#include "cache.h"
#include "page_table_walker.h"

#define maxRRPV 3
uint32_t rrpv[DTLB_SET][DTLB_WAY];
int r = 1;
// initialize replacement state
void CACHE::dtlb_initialize_replacement()
{
    cout << " dtlb Initialize SRRIP state with " << maxRRPV - r << endl;

    for (int i=0; i<DTLB_SET; i++) {
        for (int j=0; j<DTLB_WAY; j++) {
            rrpv[i][j] = maxRRPV;
        }
    }
}

// find replacement victim
uint32_t CACHE::dtlb_find_victim(uint32_t cpu, uint64_t instr_id, uint32_t set, const BLOCK *current_set, uint64_t ip, uint64_t full_addr, uint32_t type)
{
//    cout << " dtlb find victim " << maxRRPV - r << endl;
    // look for the maxRRPV line
    while (1)
    {
        for (int i=0; i<DTLB_WAY; i++)
            if (rrpv[set][i] == maxRRPV){
//		cout << "srrip  instru id " << instr_id <<  " set " << set << " way " << i<< endl;
                return i;
	}

        for (int i=0; i<DTLB_WAY; i++)
            rrpv[set][i]++;
    }

    // WE SHOULD NOT REACH HERE
    assert(0);
    return 0;
}

// called on every cache hit and cache fill
void CACHE::dtlb_update_replacement_state(uint32_t cpu, uint32_t set, uint32_t way, uint64_t full_addr, uint64_t ip, uint64_t victim_addr, uint32_t type, uint8_t hit)
{
//    cout << "SRRIP update dtlb update replacement hit "<< (int)hit << "  way " << way << " " << maxRRPV - r <<endl<< endl;
    string TYPE_NAME;
    if (type == LOAD)
        TYPE_NAME = "LOAD";
    else if (type == RFO)
        TYPE_NAME = "RFO";
    else if (type == PREFETCH)
        TYPE_NAME = "PF";
    else if (type == WRITEBACK)
        TYPE_NAME = "WB";
    else if (type == TRANSLATION)
        TYPE_NAME = "TRANSLATION";
    else
        assert(0);

    if (hit)
        TYPE_NAME += "_HIT";
    else
        TYPE_NAME += "_MISS";

    if ((type == WRITEBACK) && ip)
        assert(0);

    // uncomment this line to see the dtlb accesses
    // cout << "CPU: " << cpu << "  dtlb " << setw(9) << TYPE_NAME << " set: " << setw(5) << set << " way: " << setw(2) << way;
    // cout << hex << " paddr: " << setw(12) << paddr << " ip: " << setw(8) << ip << " victim_addr: " << victim_addr << dec << endl;
    
    if (hit)
        rrpv[set][way] = 0;
    else
        rrpv[set][way] = maxRRPV-r;
}

// use this function to print out your own stats at the end of simulation
void CACHE::dtlb_replacement_final_stats()
{

}
