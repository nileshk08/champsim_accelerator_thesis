#include "champsim.h"
#include "cache.h"

void CACHE::PSCL2_prefetcher_initialize() 
{
    cout << "CPU " << cpu << " PSCL2 next line prefetcher " << endl;
}

void CACHE::PSCL2_prefetcher_operate(uint64_t addr, uint64_t ip, uint8_t cache_hit, uint8_t type, uint64_t prefetch_id, uint8_t instruction,uint8_t core_asid, uint8_t packet_cpu)
{
	int offset = 4;
    uint64_t pf_addr;
//	int asid = addr & ((1 << 9) - 1);
//	if(knob_cloudsuite)
//		 pf_addr = ((addr>>LOG2_PAGE_SIZE >> 9 )+1) <<  9;
//	else
    
    pf_addr = ((addr>>LOG2_PAGE_SIZE)+offset) << LOG2_PAGE_SIZE;
	
    DP ( if (warmup_complete[cpu]) {
    cout << "[" << NAME << "] " << __func__ << " instr_id: " << prefetch_id << hex << " base_cl: " << (addr>>LOG2_PAGE_SIZE);
    cout << " pf_cl: " << (pf_addr>>LOG2_PAGE_SIZE) << " ip: " << ip <<  " cache_hit: " << +cache_hit << " type: " << +type << endl; });

//	cout <<"packet_cpu " << (int) packet_cpu << endl;
    if((addr >> LOG2_PAGE_SIZE)+offset > 0 )
	    prefetch_translation(ip, pf_addr, FILL_DTLB, 0, prefetch_id, instruction, packet_cpu);
}

void CACHE::PSCL2_prefetcher_cache_fill(uint64_t addr, uint32_t set, uint32_t way, uint8_t prefetch, uint64_t evicted_addr, uint32_t metadata_in)
{

}

void CACHE::PSCL2_prefetcher_final_stats()
{
    cout << "CPU " << cpu << " DTLB next line prefetcher final stats" << endl;
}
